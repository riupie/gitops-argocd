apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: eg
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway-helm
    app.kubernetes.io/version: v1.3.2
    control-plane: envoy-gateway
    helm.sh/chart: gateway-helm-1.3.2
  name: envoy-gateway
  namespace: envoy-gateway-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: eg
      app.kubernetes.io/name: gateway-helm
      control-plane: envoy-gateway
  template:
    metadata:
      annotations:
        prometheus.io/port: "19001"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: eg
        app.kubernetes.io/name: gateway-helm
        control-plane: envoy-gateway
    spec:
      containers:
      - args:
        - server
        - --config-path=/config/envoy-gateway.yaml
        env:
        - name: ENVOY_GATEWAY_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: docker.io/envoyproxy/gateway:v1.3.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: envoy-gateway
        ports:
        - containerPort: 18000
          name: grpc
        - containerPort: 18001
          name: ratelimit
        - containerPort: 18002
          name: wasm
        - containerPort: 19001
          name: metrics
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /config
          name: envoy-gateway-config
          readOnly: true
        - mountPath: /certs
          name: certs
          readOnly: true
      imagePullSecrets: []
      serviceAccountName: envoy-gateway
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          defaultMode: 420
          name: envoy-gateway-config
        name: envoy-gateway-config
      - name: certs
        secret:
          secretName: envoy-gateway
